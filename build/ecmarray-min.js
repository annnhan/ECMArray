/* https://github.com/hanan198501/ECMArray.git */
!function(a,b){function c(a){return"function"==typeof a}function d(a,d){!c(b.prototype[a])&&(b.prototype[a]=d)}!c(b.isArray)&&(b.isArray=function(a){return"[object Array]"===Object.prototype.toString.call(a)}),d("forEach",function(b,c){for(var d=0,e=this.length;e>d;d++)b.call(c||a,this[d],d,this)}),d("map",function(a,b){var c=[];return this.forEach(function(b,d,e){c.push(a.call(this,b,d,e))},b),c}),d("filter",function(a,b){var c=[];return this.forEach(function(b,d,e){a.call(this,b,d,e)&&c.push(e[d])},b),c}),d("every",function(b,c){for(var d=0,e=this.length;e>d;d++)if(!b.call(c||a,this[d],d,this))return!1;return!0}),d("some",function(b,c){for(var d=0,e=this.length;e>d;d++)if(b.call(c||a,this[d],d,this))return!0;return!1}),d("reduce",function(a,b){var c,d,e=this.length;for("undefined"==typeof b?(c=this[0],d=1):(c=b,d=0);e>d;d++)c=a(c,this[d]);return c}),d("reduceRight",function(a,b){var c,d,e=this.length;for("undefined"==typeof b?(c=this[e-1],d=e-2):(c=b,d=e-1);d>=0;d--)c=a(c,this[d]);return c}),d("indexOf",function(a){for(var b=0,c=this.length;c>b;b++)if(a==this[b])return b;return-1}),d("lastIndexOf",function(a){for(var b=this.length-1;b>=0;b--)if(a===this[b])return b;return-1})}(this,Array);